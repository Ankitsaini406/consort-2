# 🚀 SIMPLE PRODUCTION ENVIRONMENT - FIREBASE ONLY
# Copy this to .env.production and fill in your Firebase values

# ========================================
# 🔥 FIREBASE CONFIGURATION (REQUIRED)
# ========================================
# Get these from Firebase Console > Project Settings > General
NEXT_PUBLIC_FIREBASE_API_KEY=your_firebase_api_key_here
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your_project_id.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=your_project_id_here
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your_project_id.appspot.com
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your_sender_id_here
NEXT_PUBLIC_FIREBASE_APP_ID=your_app_id_here

# ========================================
# 🌐 PRODUCTION SETTINGS
# ========================================
NODE_ENV=production
NEXT_PUBLIC_SITE_URL=https://consortdigital.com

# ========================================
# 🛡️ SECURITY (OPTIONAL BUT RECOMMENDED)
# ========================================
# These are optional since Firebase handles most security
# But recommended for additional protection

# Domain configuration for CORS
ALLOWED_ORIGINS=https://consortdigital.com,https://www.consortdigital.com

# Rate limiting (optional - requires Upstash Redis)
# UPSTASH_REDIS_REST_URL=https://your-redis.upstash.io
# UPSTASH_REDIS_REST_TOKEN=your_redis_token

# ========================================
# 📋 SETUP CHECKLIST
# ========================================
# Before deploying:
# ✅ 1. Create Firebase project at https://console.firebase.google.com
# ✅ 2. Enable Authentication > Sign-in method > Email/Password
# ✅ 3. Create user account for CMS manager
# ✅ 4. Copy Firebase config values above
# ✅ 5. Deploy Firestore and Storage rules (already configured)
# ✅ 6. Test authentication flow
# ✅ 7. Deploy to production

# ========================================
# 🎯 FIREBASE CONSOLE SETUP STEPS
# ========================================
# 1. Go to https://console.firebase.google.com
# 2. Select your project
# 3. Go to Authentication > Sign-in method
# 4. Enable "Email/Password" provider
# 5. Go to Authentication > Users
# 6. Click "Add user" and create your CMS manager account
# 7. Copy the config values from Project Settings > General > Your apps

# ========================================
# 🔒 SECURITY NOTES
# ========================================
# This simplified setup is secure because:
# - Firebase handles all authentication
# - Client-side auth is appropriate for single-user CMS
# - Firestore rules protect your data
# - Storage rules secure file uploads
# - Middleware provides additional security headers

# For multi-user systems, you would need:
# - Server-side token validation
# - Role-based access control
# - Session management
# - Rate limiting
# But for single CMS manager, current setup is sufficient and secure. 